/*
 * VenafiAsAServiceAPIForEdgeManagementServiceOperationsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ErrorInformation type.
 */
public class ErrorInformation {
    private Integer code;
    private String message;
    private List<Object> args;

    /**
     * Default constructor.
     */
    public ErrorInformation() {
    }

    /**
     * Initialization constructor.
     * @param  code  Integer value for code.
     * @param  message  String value for message.
     * @param  args  List of Object value for args.
     */
    public ErrorInformation(
            Integer code,
            String message,
            List<Object> args) {
        this.code = code;
        this.message = message;
        this.args = args;
    }

    /**
     * Getter for Code.
     * @return Returns the Integer
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for Integer
     */
    @JsonSetter("code")
    public void setCode(Integer code) {
        this.code = code;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Args.
     * @return Returns the List of Object
     */
    @JsonGetter("args")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Object> getArgs() {
        return args;
    }

    /**
     * Setter for Args.
     * @param args Value for List of Object
     */
    @JsonSetter("args")
    public void setArgs(List<Object> args) {
        this.args = args;
    }

    /**
     * Converts this ErrorInformation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ErrorInformation [" + "code=" + code + ", message=" + message + ", args=" + args
                + "]";
    }

    /**
     * Builds a new {@link ErrorInformation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ErrorInformation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .code(getCode())
                .message(getMessage())
                .args(getArgs());
        return builder;
    }

    /**
     * Class to build instances of {@link ErrorInformation}.
     */
    public static class Builder {
        private Integer code;
        private String message;
        private List<Object> args;



        /**
         * Setter for code.
         * @param  code  Integer value for code.
         * @return Builder
         */
        public Builder code(Integer code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for args.
         * @param  args  List of Object value for args.
         * @return Builder
         */
        public Builder args(List<Object> args) {
            this.args = args;
            return this;
        }

        /**
         * Builds a new {@link ErrorInformation} object using the set fields.
         * @return {@link ErrorInformation}
         */
        public ErrorInformation build() {
            return new ErrorInformation(code, message, args);
        }
    }
}
