/*
 * VenafiAsAServiceAPIForEdgeManagementServiceOperationsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.example.www.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ChartDetails type.
 */
public class ChartDetails {
    private String name;
    private String version;

    /**
     * Default constructor.
     */
    public ChartDetails() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  version  String value for version.
     */
    public ChartDetails(
            String name,
            String version) {
        this.name = name;
        this.version = version;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Version.
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Converts this ChartDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ChartDetails [" + "name=" + name + ", version=" + version + "]";
    }

    /**
     * Builds a new {@link ChartDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ChartDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .version(getVersion());
        return builder;
    }

    /**
     * Class to build instances of {@link ChartDetails}.
     */
    public static class Builder {
        private String name;
        private String version;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Builds a new {@link ChartDetails} object using the set fields.
         * @return {@link ChartDetails}
         */
        public ChartDetails build() {
            return new ChartDetails(name, version);
        }
    }
}
